package modlister;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;

import org.lwjgl.Sys;
import org.lwjgl.opengl.Display;

import cpw.mods.fml.common.FMLLog;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModContainer;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;

@Mod(modid = ModLister.MOD_ID, version = ModLister.VERSION)
public class ModLister
{
    public static final String MOD_ID = "ModLister";
    public static final String MOD_NAME = "Mod Lister";
    public static final String VERSION = "@MAJOR@.@MINOR@.@REVIS@(@BUILD@)";
    public static final String DEPENDENCIES = "after:*";

    public static File mcDir = null;

    @EventHandler
    public void init(FMLInitializationEvent event)
    {

    }

    @EventHandler
    public static void postInit(FMLPostInitializationEvent event)
    {
        List<String> lines = new ArrayList();
        for (ModContainer mod : Loader.instance().getModList())
            lines.add(createLine(mod));

        try
        {
            File file = new File(mcDir, MOD_NAME + ".txt");
            BufferedWriter writer = new BufferedWriter(new FileWriter(file));

            for (String s : lines)
                writer.write(s);

            writer.write("\n");
            writer.write("List generated by " + MOD_NAME + ".\n");
            writer.write("System Time: " + new SimpleDateFormat("HH:mm MM/dd/yyyy").format(new Date()) + "\n");
            writer.write("Minecraft " + Display.getTitle().replaceAll("Minecraft ", "") + "\n");
            writer.write("OS: " + System.getProperty("os.name") + "\n");
            writer.write("Java: " + System.getProperty("java.version") + "\n");
            writer.write("LWJGL: " + Sys.getVersion());

            writer.close();

            if (!file.exists())
                file.createNewFile();

            FMLLog.log(Level.INFO, MOD_NAME + " wrote mod data properly.");
        }
        catch (IOException e)
        {
            FMLLog.log(Level.WARNING, MOD_NAME + " failed to write mod data!");
            e.printStackTrace();
        }
    }

    private static String createLine(ModContainer container)
    {
        StringBuilder builder = new StringBuilder();
        builder.append(container.getName());
        builder.append(" (");
        builder.append(container.getModId());
        builder.append(") |  Version: ");
        builder.append(container.getVersion());
        builder.append(" | Loaded From ");
        builder.append(container.getSource().getName());
        builder.append(" on ");
        builder.append(container.getSource() == null || container.getSource().getParentFile() == null ? "N/A" : container.getSource().getParentFile().getName());
        builder.append(" | URL: ");
        builder.append(container.getMetadata().url.isEmpty() ? "N/A" : container.getMetadata().url);
        builder.append("\n");

        return builder.toString();
    }

    @EventHandler
    public void preInit(FMLPreInitializationEvent event)
    {
        mcDir = event.getModConfigurationDirectory().getParentFile();
    }

}
